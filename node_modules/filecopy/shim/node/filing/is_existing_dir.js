/**
 * @function isExistingDir
 * @returns {Promise}
 * @private
 */

'use strict';

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _promise = require('babel-runtime/core-js/promise');

var _promise2 = _interopRequireDefault(_promise);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var fs = require('fs');
var co = require('co');

function isExistingDir(filename, callback) {
  return co(_regenerator2.default.mark(function _callee() {
    var exists, state;
    return _regenerator2.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return new _promise2.default(function (resolve) {
              return fs.exists(filename, function (exists) {
                return resolve(exists);
              });
            });

          case 2:
            exists = _context.sent;

            if (exists) {
              _context.next = 5;
              break;
            }

            return _context.abrupt('return', false);

          case 5:
            _context.next = 7;
            return new _promise2.default(function (resolve, reject) {
              return fs.stat(filename, function (err, state) {
                return err ? reject(err) : resolve(state);
              });
            });

          case 7:
            state = _context.sent;
            return _context.abrupt('return', state.isDirectory());

          case 9:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, this);
  }));
}

module.exports = isExistingDir;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlzX2V4aXN0aW5nX2Rpci5qcyJdLCJuYW1lcyI6WyJmcyIsInJlcXVpcmUiLCJjbyIsImlzRXhpc3RpbmdEaXIiLCJmaWxlbmFtZSIsImNhbGxiYWNrIiwicmVzb2x2ZSIsImV4aXN0cyIsInJlamVjdCIsInN0YXQiLCJlcnIiLCJzdGF0ZSIsImlzRGlyZWN0b3J5IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztBQU1BOzs7Ozs7Ozs7Ozs7QUFFQSxJQUFNQSxLQUFLQyxRQUFRLElBQVIsQ0FBWDtBQUNBLElBQU1DLEtBQUtELFFBQVEsSUFBUixDQUFYOztBQUVBLFNBQVNFLGFBQVQsQ0FBd0JDLFFBQXhCLEVBQWtDQyxRQUFsQyxFQUE0QztBQUMxQyxTQUFPSCw4QkFBRztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLG1CQUNXLHNCQUFZLFVBQUNJLE9BQUQ7QUFBQSxxQkFDN0JOLEdBQUdPLE1BQUgsQ0FBVUgsUUFBVixFQUFvQixVQUFDRyxNQUFEO0FBQUEsdUJBQVlELFFBQVFDLE1BQVIsQ0FBWjtBQUFBLGVBQXBCLENBRDZCO0FBQUEsYUFBWixDQURYOztBQUFBO0FBQ0pBLGtCQURJOztBQUFBLGdCQUlIQSxNQUpHO0FBQUE7QUFBQTtBQUFBOztBQUFBLDZDQUtDLEtBTEQ7O0FBQUE7QUFBQTtBQUFBLG1CQU9VLHNCQUFZLFVBQUNELE9BQUQsRUFBVUUsTUFBVjtBQUFBLHFCQUM1QlIsR0FBR1MsSUFBSCxDQUFRTCxRQUFSLEVBQWtCLFVBQUNNLEdBQUQsRUFBTUMsS0FBTjtBQUFBLHVCQUNoQkQsTUFBTUYsT0FBT0UsR0FBUCxDQUFOLEdBQW9CSixRQUFRSyxLQUFSLENBREo7QUFBQSxlQUFsQixDQUQ0QjtBQUFBLGFBQVosQ0FQVjs7QUFBQTtBQU9KQSxpQkFQSTtBQUFBLDZDQVlEQSxNQUFNQyxXQUFOLEVBWkM7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBSCxFQUFQO0FBY0Q7O0FBRURDLE9BQU9DLE9BQVAsR0FBaUJYLGFBQWpCIiwiZmlsZSI6ImlzX2V4aXN0aW5nX2Rpci5qcyIsInNvdXJjZVJvb3QiOiJsaWIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmdW5jdGlvbiBpc0V4aXN0aW5nRGlyXG4gKiBAcmV0dXJucyB7UHJvbWlzZX1cbiAqIEBwcml2YXRlXG4gKi9cblxuJ3VzZSBzdHJpY3QnXG5cbmNvbnN0IGZzID0gcmVxdWlyZSgnZnMnKVxuY29uc3QgY28gPSByZXF1aXJlKCdjbycpXG5cbmZ1bmN0aW9uIGlzRXhpc3RpbmdEaXIgKGZpbGVuYW1lLCBjYWxsYmFjaykge1xuICByZXR1cm4gY28oZnVuY3Rpb24gKiAoKSB7XG4gICAgbGV0IGV4aXN0cyA9IHlpZWxkIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PlxuICAgICAgZnMuZXhpc3RzKGZpbGVuYW1lLCAoZXhpc3RzKSA9PiByZXNvbHZlKGV4aXN0cykpXG4gICAgKVxuICAgIGlmICghZXhpc3RzKSB7XG4gICAgICByZXR1cm4gZmFsc2VcbiAgICB9XG4gICAgbGV0IHN0YXRlID0geWllbGQgbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT5cbiAgICAgIGZzLnN0YXQoZmlsZW5hbWUsIChlcnIsIHN0YXRlKSA9PlxuICAgICAgICBlcnIgPyByZWplY3QoZXJyKSA6IHJlc29sdmUoc3RhdGUpXG4gICAgICApXG4gICAgKVxuICAgIHJldHVybiBzdGF0ZS5pc0RpcmVjdG9yeSgpXG4gIH0pXG59XG5cbm1vZHVsZS5leHBvcnRzID0gaXNFeGlzdGluZ0RpclxuIl19