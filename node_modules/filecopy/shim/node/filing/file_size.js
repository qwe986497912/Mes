/**
 * @function fileSize
 * @returns {Promise}
 */

'use strict';

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _promise = require('babel-runtime/core-js/promise');

var _promise2 = _interopRequireDefault(_promise);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var fs = require('fs');
var co = require('co');

/** @lends fileSize */
function fileSize(filename) {
  return co(_regenerator2.default.mark(function _callee() {
    var exists, state;
    return _regenerator2.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return new _promise2.default(function (resolve) {
              return fs.exists(filename, function (exists) {
                return resolve(exists);
              });
            });

          case 2:
            exists = _context.sent;

            if (exists) {
              _context.next = 5;
              break;
            }

            return _context.abrupt('return', 0);

          case 5:
            _context.next = 7;
            return new _promise2.default(function (resolve, reject) {
              return fs.stat(filename, function (err, state) {
                return err ? reject(err) : resolve(state);
              });
            });

          case 7:
            state = _context.sent;
            return _context.abrupt('return', state['size']);

          case 9:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, this);
  }));
}

module.exports = fileSize;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbGVfc2l6ZS5qcyJdLCJuYW1lcyI6WyJmcyIsInJlcXVpcmUiLCJjbyIsImZpbGVTaXplIiwiZmlsZW5hbWUiLCJyZXNvbHZlIiwiZXhpc3RzIiwicmVqZWN0Iiwic3RhdCIsImVyciIsInN0YXRlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7O0FBS0E7Ozs7Ozs7Ozs7OztBQUVBLElBQU1BLEtBQUtDLFFBQVEsSUFBUixDQUFYO0FBQ0EsSUFBTUMsS0FBS0QsUUFBUSxJQUFSLENBQVg7O0FBRUE7QUFDQSxTQUFTRSxRQUFULENBQW1CQyxRQUFuQixFQUE2QjtBQUMzQixTQUFPRiw4QkFBRztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLG1CQUNXLHNCQUFZLFVBQUNHLE9BQUQ7QUFBQSxxQkFDN0JMLEdBQUdNLE1BQUgsQ0FBVUYsUUFBVixFQUFvQixVQUFDRSxNQUFEO0FBQUEsdUJBQVlELFFBQVFDLE1BQVIsQ0FBWjtBQUFBLGVBQXBCLENBRDZCO0FBQUEsYUFBWixDQURYOztBQUFBO0FBQ0pBLGtCQURJOztBQUFBLGdCQUlIQSxNQUpHO0FBQUE7QUFBQTtBQUFBOztBQUFBLDZDQUtDLENBTEQ7O0FBQUE7QUFBQTtBQUFBLG1CQU9VLHNCQUFZLFVBQUNELE9BQUQsRUFBVUUsTUFBVjtBQUFBLHFCQUM1QlAsR0FBR1EsSUFBSCxDQUFRSixRQUFSLEVBQWtCLFVBQUNLLEdBQUQsRUFBTUMsS0FBTjtBQUFBLHVCQUNoQkQsTUFBTUYsT0FBT0UsR0FBUCxDQUFOLEdBQW9CSixRQUFRSyxLQUFSLENBREo7QUFBQSxlQUFsQixDQUQ0QjtBQUFBLGFBQVosQ0FQVjs7QUFBQTtBQU9KQSxpQkFQSTtBQUFBLDZDQVlEQSxNQUFPLE1BQVAsQ0FaQzs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFILEVBQVA7QUFjRDs7QUFFREMsT0FBT0MsT0FBUCxHQUFpQlQsUUFBakIiLCJmaWxlIjoiZmlsZV9zaXplLmpzIiwic291cmNlUm9vdCI6ImxpYiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGZ1bmN0aW9uIGZpbGVTaXplXG4gKiBAcmV0dXJucyB7UHJvbWlzZX1cbiAqL1xuXG4ndXNlIHN0cmljdCdcblxuY29uc3QgZnMgPSByZXF1aXJlKCdmcycpXG5jb25zdCBjbyA9IHJlcXVpcmUoJ2NvJylcblxuLyoqIEBsZW5kcyBmaWxlU2l6ZSAqL1xuZnVuY3Rpb24gZmlsZVNpemUgKGZpbGVuYW1lKSB7XG4gIHJldHVybiBjbyhmdW5jdGlvbiAqICgpIHtcbiAgICBsZXQgZXhpc3RzID0geWllbGQgbmV3IFByb21pc2UoKHJlc29sdmUpID0+XG4gICAgICBmcy5leGlzdHMoZmlsZW5hbWUsIChleGlzdHMpID0+IHJlc29sdmUoZXhpc3RzKSlcbiAgICApXG4gICAgaWYgKCFleGlzdHMpIHtcbiAgICAgIHJldHVybiAwXG4gICAgfVxuICAgIGxldCBzdGF0ZSA9IHlpZWxkIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+XG4gICAgICBmcy5zdGF0KGZpbGVuYW1lLCAoZXJyLCBzdGF0ZSkgPT5cbiAgICAgICAgZXJyID8gcmVqZWN0KGVycikgOiByZXNvbHZlKHN0YXRlKVxuICAgICAgKVxuICAgIClcbiAgICByZXR1cm4gc3RhdGVbICdzaXplJyBdXG4gIH0pXG59XG5cbm1vZHVsZS5leHBvcnRzID0gZmlsZVNpemVcbiJdfQ==