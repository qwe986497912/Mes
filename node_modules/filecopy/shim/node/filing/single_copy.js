/**
 * Copy a single file
 * @function singleCopy
 * @returns {Promise}
 */

'use strict';

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _promise = require('babel-runtime/core-js/promise');

var _promise2 = _interopRequireDefault(_promise);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var fs = require('fs');
var co = require('co');

/** @lends singleCopy */
function singleCopy(src, dest) {
  return co(_regenerator2.default.mark(function _callee() {
    var exists;
    return _regenerator2.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return new _promise2.default(function (resolve) {
              return fs.exists(dest, function (exists) {
                return resolve(exists);
              });
            });

          case 2:
            exists = _context.sent;

            if (!exists) {
              _context.next = 6;
              break;
            }

            _context.next = 6;
            return new _promise2.default(function (resolve, reject) {
              return fs.chmod(dest, '777', function (err) {
                return err ? reject(err) : resolve();
              });
            });

          case 6:
            _context.next = 8;
            return new _promise2.default(function (resolve, reject) {
              var aborted = false;

              var r = fs.createReadStream(src);
              var w = fs.createWriteStream(dest);
              r.on('error', function (err) {
                return done(err);
              });
              w.on('error', function (err) {
                return done(err);
              });
              w.on('close', function (ex) {
                return done();
              });
              r.pipe(w);

              function done(err) {
                if (aborted) {
                  return;
                }
                aborted = true;
                err ? reject(err) : resolve();
              }
            });

          case 8:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, this);
  }));
}

module.exports = singleCopy;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNpbmdsZV9jb3B5LmpzIl0sIm5hbWVzIjpbImZzIiwicmVxdWlyZSIsImNvIiwic2luZ2xlQ29weSIsInNyYyIsImRlc3QiLCJyZXNvbHZlIiwiZXhpc3RzIiwicmVqZWN0IiwiY2htb2QiLCJlcnIiLCJhYm9ydGVkIiwiciIsImNyZWF0ZVJlYWRTdHJlYW0iLCJ3IiwiY3JlYXRlV3JpdGVTdHJlYW0iLCJvbiIsImRvbmUiLCJleCIsInBpcGUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7O0FBTUE7Ozs7Ozs7Ozs7OztBQUVBLElBQU1BLEtBQUtDLFFBQVEsSUFBUixDQUFYO0FBQ0EsSUFBTUMsS0FBS0QsUUFBUSxJQUFSLENBQVg7O0FBRUE7QUFDQSxTQUFTRSxVQUFULENBQXFCQyxHQUFyQixFQUEwQkMsSUFBMUIsRUFBZ0M7QUFDOUIsU0FBT0gsOEJBQUc7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxtQkFDVyxzQkFBWSxVQUFDSSxPQUFEO0FBQUEscUJBQzdCTixHQUFHTyxNQUFILENBQVVGLElBQVYsRUFBZ0IsVUFBQ0UsTUFBRDtBQUFBLHVCQUFZRCxRQUFRQyxNQUFSLENBQVo7QUFBQSxlQUFoQixDQUQ2QjtBQUFBLGFBQVosQ0FEWDs7QUFBQTtBQUNKQSxrQkFESTs7QUFBQSxpQkFJSkEsTUFKSTtBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBLG1CQUtBLHNCQUFZLFVBQUNELE9BQUQsRUFBVUUsTUFBVjtBQUFBLHFCQUNoQlIsR0FBR1MsS0FBSCxDQUFTSixJQUFULEVBQWUsS0FBZixFQUFzQixVQUFDSyxHQUFEO0FBQUEsdUJBQ3BCQSxNQUFNRixPQUFPRSxHQUFQLENBQU4sR0FBb0JKLFNBREE7QUFBQSxlQUF0QixDQURnQjtBQUFBLGFBQVosQ0FMQTs7QUFBQTtBQUFBO0FBQUEsbUJBWUYsc0JBQVksVUFBQ0EsT0FBRCxFQUFVRSxNQUFWLEVBQXFCO0FBQ3JDLGtCQUFJRyxVQUFVLEtBQWQ7O0FBRUEsa0JBQUlDLElBQUlaLEdBQUdhLGdCQUFILENBQW9CVCxHQUFwQixDQUFSO0FBQ0Esa0JBQUlVLElBQUlkLEdBQUdlLGlCQUFILENBQXFCVixJQUFyQixDQUFSO0FBQ0FPLGdCQUFFSSxFQUFGLENBQUssT0FBTCxFQUFjLFVBQUNOLEdBQUQ7QUFBQSx1QkFBU08sS0FBS1AsR0FBTCxDQUFUO0FBQUEsZUFBZDtBQUNBSSxnQkFBRUUsRUFBRixDQUFLLE9BQUwsRUFBYyxVQUFDTixHQUFEO0FBQUEsdUJBQVNPLEtBQUtQLEdBQUwsQ0FBVDtBQUFBLGVBQWQ7QUFDQUksZ0JBQUVFLEVBQUYsQ0FBSyxPQUFMLEVBQWMsVUFBQ0UsRUFBRDtBQUFBLHVCQUFRRCxNQUFSO0FBQUEsZUFBZDtBQUNBTCxnQkFBRU8sSUFBRixDQUFPTCxDQUFQOztBQUVBLHVCQUFTRyxJQUFULENBQWVQLEdBQWYsRUFBb0I7QUFDbEIsb0JBQUlDLE9BQUosRUFBYTtBQUNYO0FBQ0Q7QUFDREEsMEJBQVUsSUFBVjtBQUNBRCxzQkFBTUYsT0FBT0UsR0FBUCxDQUFOLEdBQW9CSixTQUFwQjtBQUNEO0FBQ0YsYUFqQkssQ0FaRTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFILEVBQVA7QUErQkQ7O0FBRURjLE9BQU9DLE9BQVAsR0FBaUJsQixVQUFqQiIsImZpbGUiOiJzaW5nbGVfY29weS5qcyIsInNvdXJjZVJvb3QiOiJsaWIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHkgYSBzaW5nbGUgZmlsZVxuICogQGZ1bmN0aW9uIHNpbmdsZUNvcHlcbiAqIEByZXR1cm5zIHtQcm9taXNlfVxuICovXG5cbid1c2Ugc3RyaWN0J1xuXG5jb25zdCBmcyA9IHJlcXVpcmUoJ2ZzJylcbmNvbnN0IGNvID0gcmVxdWlyZSgnY28nKVxuXG4vKiogQGxlbmRzIHNpbmdsZUNvcHkgKi9cbmZ1bmN0aW9uIHNpbmdsZUNvcHkgKHNyYywgZGVzdCkge1xuICByZXR1cm4gY28oZnVuY3Rpb24gKiAoKSB7XG4gICAgbGV0IGV4aXN0cyA9IHlpZWxkIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PlxuICAgICAgZnMuZXhpc3RzKGRlc3QsIChleGlzdHMpID0+IHJlc29sdmUoZXhpc3RzKSlcbiAgICApXG4gICAgaWYgKGV4aXN0cykge1xuICAgICAgeWllbGQgbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT5cbiAgICAgICAgZnMuY2htb2QoZGVzdCwgJzc3NycsIChlcnIpID0+XG4gICAgICAgICAgZXJyID8gcmVqZWN0KGVycikgOiByZXNvbHZlKClcbiAgICAgICAgKVxuICAgICAgKVxuICAgIH1cblxuICAgIHlpZWxkIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIGxldCBhYm9ydGVkID0gZmFsc2VcblxuICAgICAgbGV0IHIgPSBmcy5jcmVhdGVSZWFkU3RyZWFtKHNyYylcbiAgICAgIGxldCB3ID0gZnMuY3JlYXRlV3JpdGVTdHJlYW0oZGVzdClcbiAgICAgIHIub24oJ2Vycm9yJywgKGVycikgPT4gZG9uZShlcnIpKVxuICAgICAgdy5vbignZXJyb3InLCAoZXJyKSA9PiBkb25lKGVycikpXG4gICAgICB3Lm9uKCdjbG9zZScsIChleCkgPT4gZG9uZSgpKVxuICAgICAgci5waXBlKHcpXG5cbiAgICAgIGZ1bmN0aW9uIGRvbmUgKGVycikge1xuICAgICAgICBpZiAoYWJvcnRlZCkge1xuICAgICAgICAgIHJldHVyblxuICAgICAgICB9XG4gICAgICAgIGFib3J0ZWQgPSB0cnVlXG4gICAgICAgIGVyciA/IHJlamVjdChlcnIpIDogcmVzb2x2ZSgpXG4gICAgICB9XG4gICAgfSlcbiAgfSlcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzaW5nbGVDb3B5XG4iXX0=